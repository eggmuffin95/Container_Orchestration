{\rtf1\ansi\ansicpg1252\cocoartf1561
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #================\
Start Swarm setup\
WARNING: devicemapper: usage of loopback devices is strongly discouraged for production use.\
         Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\
NODE_TYPE=manager\
DYNAMODB_TABLE=DDC-CUSTOM-dyndbtable\
HOSTNAME=ip-172-30-11-246.eu-west-1.compute.internal\
STACK_NAME=DDC-CUSTOM\
INSTANCE_NAME=ManagerAsg\
AWS_REGION=eu-west-1\
MANAGER_IP=\
SWARM_STATE=inactive\
HAS_DDC=yes\
CHANNEL=\
#================\
Get Primary Manager IP\
MANAGER_IP=\
 It's a Manager, run setup\
MANAGER_TOKEN can't be found yet. MANAGER_IP isn't set yet.\
Setup Manager\
   PRIVATE_IP=172.30.11.246\
   PRIMARY_MANAGER_IP=\
Primary Manager IP not set yet, lets try and set it.\
\{\
    "ConsumedCapacity": \{\
        "CapacityUnits": 1.0,\
        "TableName": "DDC-CUSTOM-dyndbtable"\
    \}\
\}\
   PRIMARY_RESULT=0\
   Primary Manager init\
Swarm initialized: current node (4lgjgv8mzj8fv8z1ymmgrmfxy) is now a manager.\
\
To add a worker to this swarm, run the following command:\
\
    docker swarm join \\\
    --token SWMTKN-1-0me2jqjeupq7khj24bg8d43lpzgzdf9s8q3u4ysjkdd2eruxz3-179b2ruo9log2mls1gqgpeu4h \\\
    172.30.11.246:2377\
\
To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\
\
WARNING: devicemapper: usage of loopback devices is strongly discouraged for production use.\
         Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\
SWARM_ID: 1heyj0y725k0vo9rnc4yiz303\
WARNING: devicemapper: usage of loopback devices is strongly discouraged for production use.\
         Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\
NODE: 4lgjgv8mzj8fv8z1ymmgrmfxy\
   Primary Manager init complete\
#================ docker info    ===\
Containers: 2\
 Running: 1\
 Paused: 0\
 Stopped: 1\
Images: 2\
Server Version: 17.03.2-ee-6\
Storage Driver: devicemapper\
 Pool Name: docker-202:1-39638340-pool\
 Pool Blocksize: 65.54 kB\
 Base Device Size: 10.74 GB\
 Backing Filesystem: xfs\
 Data file: /dev/loop0\
 Metadata file: /dev/loop1\
 Data Space Used: 1.717 GB\
 Data Space Total: 107.4 GB\
 Data Space Available: 13.24 GB\
 Metadata Space Used: 2.597 MB\
 Metadata Space Total: 2.147 GB\
 Metadata Space Available: 2.145 GB\
 Thin Pool Minimum Free Space: 10.74 GB\
 Udev Sync Supported: true\
 Deferred Removal Enabled: false\
 Deferred Deletion Enabled: false\
 Deferred Deleted Device Count: 0\
 Data loop file: /var/lib/docker/devicemapper/devicemapper/data\
 Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\
 Library Version: 1.02.140-RHEL7 (2017-05-03)\
Logging Driver: json-file\
Cgroup Driver: cgroupfs\
Plugins:\
 Volume: local\
 Network: bridge host macvlan null overlay\
Swarm: active\
 NodeID: 4lgjgv8mzj8fv8z1ymmgrmfxy\
 Is Manager: true\
 ClusterID: 1heyj0y725k0vo9rnc4yiz303\
 Managers: 1\
 Nodes: 1\
 Orchestration:\
  Task History Retention Limit: 5\
 Raft:\
  Snapshot Interval: 10000\
  Number of Old Snapshots to Retain: 0\
  Heartbeat Tick: 1\
  Election Tick: 3\
 Dispatcher:\
  Heartbeat Period: 5 seconds\
 CA Configuration:\
  Expiry Duration: 3 months\
 Node Address: 172.30.11.246\
 Manager Addresses:\
  172.30.11.246:2377\
Runtimes: runc\
Default Runtime: runc\
Init Binary: docker-init\
containerd version: 6c463891b1ad274d505ae3bb738e530d1df2b3c7\
runc version: 54296cf40ad8143b62dbcaa1d90e520a2136ddfe\
init version: 949e6fa\
Security Options:\
 seccomp\
  Profile: default\
Kernel Version: 3.10.0-514.16.1.el7.x86_64\
Operating System: CentOS Linux 7 (Core)\
OSType: linux\
Architecture: x86_64\
CPUs: 2\
Total Memory: 7.388 GiB\
Name: ip-172-30-11-246.eu-west-1.compute.internal\
ID: QOLI:LBJB:OXRF:35J6:IRVM:FOXL:5QOX:T53J:TDWZ:MJKD:RK5C:A7LY\
Docker Root Dir: /var/lib/docker\
Debug Mode (client): false\
Debug Mode (server): false\
Registry: https://index.docker.io/v1/\
Experimental: false\
Insecure Registries:\
 127.0.0.0/8\
Live Restore Enabled: false\
\
WARNING: devicemapper: usage of loopback devices is strongly discouraged for production use.\
         Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\
#================ docker node ls ===\
ID                           HOSTNAME                                     STATUS  AVAILABILITY  MANAGER STATUS\
4lgjgv8mzj8fv8z1ymmgrmfxy *  ip-172-30-11-246.eu-west-1.compute.internal  Ready   Active        Leader\
#===================================\
DDC is installed, it will lets AWS know that the server is ready, when it's ready.\
Complete Swarm setup}